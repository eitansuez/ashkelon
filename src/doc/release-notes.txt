Release Notes

What's new in v0.9 (February 2006):
-----------------------------------

1. Expansion of API XML file definition to optionally include
   cvs or subversion repository information.  Ashkelon will
   auto-download source code now instead of requiring you to
   and setting up the SOURCEPATH.  The old mechanism still works
   and is still supported.  That is ashkelon will fallback to looking
   for the source code in your SOURCEPATH

2. Re-implementation of "ashkelon" repository manager command to use
   the JSAP API for parsing command line arguments.  Now have very 
   consistent support for subcommand flags, along with text descriptions
   / help text on each subcommand.

3. Added new "ashkelon update" subcommand for updating an API

4. Added new "ashkelon export" subcommand which simply dumps to stdout
   an XML document describing all APIs in the repository, including
   the nested package lists.

5. Experimental new command "ashkelon html" for non-database processing
   of API docs to produce static html pages, but using the ashkelon
   look and feel.  Not complete.

6. Replaced castor xml with JiBX for whatever xml data binding tasks
   ashkelon performs under the hood

7. Although not complete, much work has gone towards structuring the code
   to allow ashkelon to run in a self-service mode.  That is, for the web
   site to support the submission of requests for new APIs and the automatic
   processing of the submitted API information for addition to the repository.
   That is, web-based API management.  The goal here is to allow API 
   administrators to manage their APIs in a public/global repository.

8. Although not complete, effort has begun to modularize ashkelon better.
   You'll notice the lib directory has been further structured into multiple
   subdirectories per ashkelon module (manager, webapp, tools, etc..).  
   You'll notice a similar modularization in the new java package structure
   for ashkelon's source code.

9. Dropped the javadoc convention to prefix the api xml file with an 
   at-sign (@).  Now we're simply doing to do ashkelon add dom4j.xml.
   The presence of the at-sign used to prevent command completion from
   working.

0. Updated documentation (guide.xml, used to produce html and pdf docs)
   accordingly.


What's new in v0.8.9 (September 10 2004):
-----------------------------------------

  This release enhances search and cross references with paging.  Searches that return a large number of results are no longer clipped to 50 entries.  Instead the first page is displayed, along with "next" and "previous" buttons to navigate the results.  The same feature has likewise been applied to listing cross references.  For example, you are now able to page through the thousands of methods that match the "returned-by" cross reference on java.lang.String.

 The paging feaure was implemented using JDBC cursors and so perform adequately.
 These enhancements were made only to the DHTML ui


What's new in v0.8.8 (August 20 2004):
-------------------------------------

1. Internal refactoring of statements.properties files for various databases:  eliminated duplication in common sql statements
2. Added support for mckoidb
3. Revised all queries using "limit" clause and replaced with jdbc "setMaxRows" on statements or preparedstatements
4. Fixed bug regarding alphabet tab links on class index pages

What's new in v0.8.7 (August 17 2004):
--------------------------------------

 1. Minor but important revision of the ant build file:  optional tasks that depended on catalina-ant.jar existing in $ANT_HOME/lib have been commented out.  Build file now works out of the box (Thanks Henri Yandell for suggesting this)

 2. Downgraded JSTL from v1.1 to v1.0 for wider servlet container compatibility.  Ashkelon should now work out of the box with either tomcat 4.x or tomcat 5.x (as well as many other servlet containers, such as resin) (Thanks Henri Yandell for suggesting this)

 3. Major:  Ashkelon repository population now works with _either_ ashkelon api xml files or Maven project POM files (project.xml).  That is, you can now do:  ashkelon add @project.xml from, say, your dom4j project directory and you're ready to go (you still need the sources to exist in your SOURCEPATH environment variable)


What's new in v0.8.6 (July 31 2004):
----------------------------------

 - Made handling of @link references (inline tags) during population an 
  extension point for other systems that derive from Ashkelon.  Ashkelon
  currently replaces these references to urls it needs for its web-based
  UIs (Now in AshkelonTagResolver)

 - Merged in a fix that Matt Schmidt provided regarding the handling of inline tags 
  in return descriptions

 - Noticed resin having an issue with certain c:import tags.  Replaced with jsp:include

 - Started updating mechanism for producing documentation to work with the latest
  version of the ant docbook styler, to be able to produce pdf docs in addition
  to html.  PDF doco not yet available as more docbook editing work is necessary
  for correct output.

 - Re-implemented view source feature.  This version is much more performant
  and pluggable.  Have two alternative implementations, using two independent
  java2html libraries.  Algorithm will now cache the html file on disk in
  the web app so that subsequent requests for view source do not require 
  reprocessing the source file.

 - Fix "ashkelon remove" on mysql.  Database table names are case-sensitive on
  Unix

 - Further refactoring of web content and slight changes/improvements in the
  looks of some pages.

 - Many description blocks with clipped heights (and scrolling overflow) are 
   now optionally clipped.
   A toggle button (on upper rhs) gives user control of whether css style
   height is auto or fixed.

What's new in v0.8.5 (July 7 2004):
----------------------------------

 - Updated mysql jdbc driver to v3.0.14
 - Much refactoring has been done:
    * The controller servlet is simpler
    * The HTML pages are simpler, more consistent and more pleasant
      (though additional refactoring of pages is planned for even further
       streamlining)
 - Dynamic HTML now mostly usable with the Safari browser (in addition to 
     previous support for Mozilla and Internet Explorer)
    though a few issues remain to be addressed for full Safari support
 - Simple class search now really is on the header of every page (for quick access)
 - Some cosmetic ui changes to DHTML ui (legend moved to header)
 - Started to add first widget allowing end user to toggle whether to constrain block
    heights and scroll (so everything fits on a page) or whether to just let blocks
    occupy as much vertical space as they need (and scroll the entire page).  See for
    example the J2SE API packages list (assuming you've populated J2SE in your 
    repository)


What's new in v0.8.4 (May 20 2004):
---------------------------------

 This release strictly modifies project documentation, not
  project codebase.

 1. Serious revamping of project documentation
   a. content expanded, updated, corrected
   b. documentation now written in docbook xml, currently producing html

 2. ApiXml tool/utility now more easily callable (added shell script
     in bin/ ) to produce api xml files to feed to ashkelon

What's new in v0.8.3 (May 2004):
--------------------

 1. Class Search Field on every page
 2. JSTL libs included with distro (simpler install)
 3. Switch to GPL

What's new in v0.8.2: (2003)
---------------------
 1. Small but important fix to conn pooling:  on error pool is now flushed/
    reset/discarded.
 2. Finally:  Ant task for running ashkelon from Ant (thanks to bob)
 3. Other miscellaneous bug fixes.

What's new in v0.8.1:
---------------------

 Note: don't let the subversion increment fool you.  0.8.1 represents a major
  upgrade from 0.8.0.  I am now conserving on version numbers because of 
  the number of features I want the product to include by the time ashkelon
  reaches v1.0

 Back-end
 - Ashkelon now supports PostgresQL

 Refactoring
 - Directory Structure for codebase reworked
 - All references to dbdoc replaced with 'ashkelon', the open-source name of the product
 - packaging of java codebase now org.ashkelon instead of com.u2d.dbdoc
 - url mapping improved, now uses suffix like struts does (.do) instead of passing
    action name in query string

 UI
 - Authors section added as top-level menu
 - Authors are now styled, like other entities are
 - API page improved with tabbed pane, to conform to look and feel of package and class pages
 - rendering in Mozilla improved

 Documentation
 - ERD diagram (pdf) added, now documents schema 

--

 Goals for v1.0:  (see todo list for a more complete listing)
  - simpler installation
  - ant support (ashkelon ant task)
  - maven support (step 1: make ashkelon buildable using maven (add pom file)
  - multi-version support
  - gui for populator / manager
  - plugins for eclipse, netbeans
  - jsp's utilising jstl more fully

No Longer Pursuing:
  - xul ui
Complete
  - a distribution of ashkelon with an embedded database (ashkelon lite)
  - a plugin for IntelliJ IDEA




Hello people, just thought I'd lay down a roadmap of what I (Ben Walding) 
was planning to do ashkelon.  This way you can veto or help out where
you think appropriate.


1) Clean up the codebase so that it is configurable at runtime
2) More test cases
3) Fix licenses in headers
4) Consider removal of appropriate components of Ashkelon that are
   essentially copies of third party libraries. eg
   
   Logger - replace with log4j or similar (maybe through commons-logging wrapper)
   DBMgr - replace parts with commons-dbcp (jakarta)
   Launching - use classworlds for launching (either through an uberjar or just normally)

5) Mavenise the build process. For the time being I'll probably add the
   appropriate parts for mavenisation while leaving the build.xml in place.
   Ultimately the decision will have to be made of whether maven adds
   enough to warrant not keeping the build.xml up-to-date. Full
   mavenisation will probably cause the code-base to split into
   two parts - the web application and the local component.
   
   This would be done by 
   
   ashkelon/common (common docs / core code)
   ashkelon/server (the web application components)
   ashkelon/client (the uploader component)
   
   ashkelon/* would probably be almost nothing
   
   This is primarily brought about by maven only building one artifact per project,
   so you need multiple subprojects to build multiple jar artifacts.
   
   
6) Remove duplicate jars (DB drivers primarily)
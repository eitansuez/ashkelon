--
-- author: Eitan Suez
--   org.: UptoData, Inc.
-- descr.: sql script for creating schema for v2 of dbdoc database
--   date: 4.25.2000
-- major update on: 3.12.2001 - 3.26.2001
--

-- 1. drop previously created objects

DROP TABLE API CASCADE CONSTRAINTS;
DROP TABLE PACKAGE CASCADE CONSTRAINTS;
DROP TABLE CLASSTYPE CASCADE CONSTRAINTS;
DROP TABLE IMPL_INTERFACE CASCADE CONSTRAINTS;
DROP TABLE SUPERCLASS;
DROP TABLE AUTHOR CASCADE CONSTRAINTS;
DROP TABLE CLASS_AUTHOR CASCADE CONSTRAINTS;
DROP TABLE DOC CASCADE CONSTRAINTS;
DROP TABLE REFERENCE CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE FIELD CASCADE CONSTRAINTS;
DROP TABLE EXECMEMBER CASCADE CONSTRAINTS;
DROP TABLE PARAMETER CASCADE CONSTRAINTS;
DROP TABLE METHOD CASCADE CONSTRAINTS;
DROP TABLE THROWNEXCEPTION CASCADE CONSTRAINTS;
DROP TABLE CONSTRUCTOR CASCADE CONSTRAINTS;

DROP TABLE CLASS_ANCESTORS CASCADE CONSTRAINTS;
DROP TABLE TEMP_DELTA CASCADE CONSTRAINTS;



-- 2. schema tables & indices

CREATE TABLE DOC
(
  ID NUMBER(9) PRIMARY KEY,
  DOC_TYPE NUMBER(9),
  SINCE VARCHAR2(75),
  -- DEPRECATED VARCHAR2(100),
  DEPRECATED VARCHAR2(500),
  SUMMARYDESCRIPTION VARCHAR2(500),
  DESCRIPTION VARCHAR2(3600)
);

CREATE TABLE REFERENCE
(
  LABEL VARCHAR2(60),
  SOURCEDOC_ID NUMBER(9) REFERENCES DOC(ID), -- ON DELETE CASCADE,
  REFDOC_ID NUMBER(9),
  REFDOC_NAME VARCHAR2(450),
  REFDOC_TYPE NUMBER(9),
  IS_INLINE NUMBER(9),
  INLINE_ORDER NUMBER(9),
  INLINE_FIELD_TYPE NUMBER(9)
);

CREATE INDEX REF_IDX1 ON REFERENCE(SOURCEDOC_ID);
CREATE INDEX REF_IDX2 ON REFERENCE(REFDOC_ID);


CREATE TABLE API
(
  ID NUMBER(9) PRIMARY KEY,
  NAME VARCHAR2(60) NOT NULL,
  SUMMARYDESCRIPTION VARCHAR2(250),
  DESCRIPTION VARCHAR2(3600),
  PUBLISHER VARCHAR2(150),
  DOWNLOAD_URL VARCHAR2(150),
  RELEASE_DATE DATE,
  VERSION VARCHAR2(30)
);

CREATE INDEX API_IDX1 ON API(NAME);


CREATE TABLE PACKAGE
(
  ID NUMBER(9) PRIMARY KEY,
  NAME VARCHAR2(60) NOT NULL,
  DOCID NUMBER(9),
  API_ID NUMBER(9)
);

CREATE INDEX PKG_IDX1 ON PACKAGE(NAME);
CREATE INDEX PKG_IDX2 ON PACKAGE(DOCID);


CREATE TABLE CLASSTYPE -- extends type
(
  ID NUMBER(9) PRIMARY KEY,
  NAME VARCHAR2(100) NOT NULL,
  QUALIFIEDNAME VARCHAR2(150) NOT NULL,
  TYPE NUMBER(9),
  PACKAGEID NUMBER(9) REFERENCES PACKAGE(ID), -- ON DELETE CASCADE,
--  SUPERCLASSID NUMBER(9),
  SUPERCLASSNAME VARCHAR2(150),
  ISABSTRACT NUMBER(9),
  VERSION VARCHAR2(100),
  DOCID NUMBER(9),
  ISSTATIC NUMBER(9),
  ISFINAL NUMBER(9),
  ACCESSIBILITY NUMBER(9),
  MODIFIER VARCHAR2(31),
  CONTAININGCLASSNAME VARCHAR(150)
);

CREATE INDEX CLASS_IDX1 ON CLASSTYPE(NAME);
CREATE INDEX CLASS_IDX2 ON CLASSTYPE(QUALIFIEDNAME);
CREATE INDEX CLASS_IDX3 ON CLASSTYPE(TYPE);
CREATE INDEX CLASS_IDX4 ON CLASSTYPE(PACKAGEID);
CREATE INDEX CLASS_IDX5 ON CLASSTYPE(SUPERCLASSNAME);
CREATE INDEX CLASS_IDX6 ON CLASSTYPE(DOCID);
CREATE INDEX CLASS_IDX7 ON CLASSTYPE(ISABSTRACT);
CREATE INDEX CLASS_IDX8 ON CLASSTYPE(ACCESSIBILITY);


CREATE TABLE IMPL_INTERFACE
(
  CLASSID NUMBER(9),
  INTERFACEID NUMBER(9),
  NAME VARCHAR2(150) NOT NULL
);

CREATE INDEX IIMPL_IDX1 ON IMPL_INTERFACE(NAME);
CREATE INDEX IIMPL_IDX2 ON IMPL_INTERFACE(CLASSID);


--
-- classes have relationships to other entities such as interfaces
-- they implement and classes that they extend (inheritance).
-- the superclass relationship was one where both origin and
-- target relations used the same table.  this complicated the
-- ability to update and sever relationships.  so superclass
-- relationships were put in a separate table simply to ease
-- the ability to connect & sever cross-references between classes.
--
CREATE TABLE SUPERCLASS
(
  CLASSID NUMBER(9),
  SUPERCLASSID NUMBER(9),
  NAME VARCHAR2(150) NOT NULL
);

CREATE INDEX SUPER_IDX1 ON SUPERCLASS(NAME);
CREATE INDEX SUPER_IDX2 ON SUPERCLASS(CLASSID);



-- table author provided with the intention of extending model to store more information
-- about java class authors
CREATE TABLE AUTHOR
(
  ID NUMBER(9) PRIMARY KEY,
  NAME VARCHAR2(120) NOT NULL
);

CREATE INDEX AUTH_IDX1 ON AUTHOR(NAME);


CREATE TABLE CLASS_AUTHOR
(
  CLASSID NUMBER(9) REFERENCES CLASSTYPE(ID), -- ON DELETE CASCADE,
  AUTHORID NUMBER(9) REFERENCES AUTHOR(ID) -- ON DELETE CASCADE
);

CREATE INDEX CLSAUTH_IDX1 ON CLASS_AUTHOR(AUTHORID);
CREATE INDEX CLSAUTH_IDX2 ON CLASS_AUTHOR(CLASSID);


CREATE TABLE MEMBER
(
  ID NUMBER(9) PRIMARY KEY,
  CLASSID NUMBER(9) REFERENCES CLASSTYPE(ID), -- ON DELETE CASCADE,
  DOCID NUMBER(9),
  NAME VARCHAR2(100) NOT NULL,
  QUALIFIEDNAME VARCHAR2(150) NOT NULL,
  ISSTATIC NUMBER(9),
  ISFINAL NUMBER(9),
  ACCESSIBILITY NUMBER(9),
  MODIFIER VARCHAR2(51),
  TYPE NUMBER(9)
);

CREATE INDEX MEMBER_IDX1 ON MEMBER(CLASSID);
CREATE INDEX MEMBER_IDX2 ON MEMBER(NAME);
CREATE INDEX MEMBER_IDX3 ON MEMBER(DOCID);
CREATE INDEX MEMBER_IDX4 ON MEMBER(ISSTATIC);
CREATE INDEX MEMBER_IDX5 ON MEMBER(ACCESSIBILITY);


CREATE TABLE FIELD -- extends member
(
  ID NUMBER(9) PRIMARY KEY,
  TYPEID NUMBER(9),
  TYPEDIMENSION NUMBER(9),
  TYPENAME VARCHAR2(150) NOT NULL
);

CREATE INDEX FLD_IDX1 ON FIELD(TYPENAME);


CREATE TABLE EXECMEMBER -- extends member
(
  ID NUMBER(9) PRIMARY KEY,
  ISSYNCHRONIZED NUMBER(9),
  ISNATIVE NUMBER(9),
  SIGNATURE VARCHAR2(300) NOT NULL, -- signature is parameter list in parentheses
  FULLYQUALIFIEDNAME VARCHAR2(450) NOT NULL -- qualified name + signature
);


CREATE TABLE METHOD -- extends execmember
(
  ID NUMBER(9) PRIMARY KEY,
  ISABSTRACT NUMBER(9),
  RETURNTYPEID NUMBER(9),
  RETURNTYPEDIMENSION NUMBER(9),
  RETURNTYPENAME VARCHAR2(150) NOT NULL,
  -- RETURNDESCRIPTION VARCHAR2(350)
  RETURNDESCRIPTION VARCHAR2(500)
);

CREATE INDEX METHOD_IDX1 ON METHOD(RETURNTYPENAME);


CREATE TABLE CONSTRUCTOR -- extends execmember
(
  ID NUMBER(9) PRIMARY KEY
);


CREATE TABLE PARAMETER
(
  EXECMEMBERID NUMBER(9) REFERENCES EXECMEMBER(ID), -- ON DELETE CASCADE,
  NAME VARCHAR2(50),
  -- DESCRIPTION VARCHAR2(350),
  DESCRIPTION VARCHAR2(500),
  TYPEID NUMBER(9),
  TYPEDIMENSION NUMBER(9),
  TYPENAME VARCHAR2(150) NOT NULL,
  LISTEDORDER NUMBER(9)
);

CREATE INDEX PARM_IDX1 ON PARAMETER(EXECMEMBERID);
CREATE INDEX PARM_IDX2 ON PARAMETER(TYPENAME);


CREATE TABLE THROWNEXCEPTION
(
  THROWERID NUMBER(9) REFERENCES EXECMEMBER(ID), -- ON DELETE CASCADE,
  EXCEPTIONID NUMBER(9),  -- references classtype(id) on delete sever!
  NAME VARCHAR2(150) NOT NULL,
  -- DESCRIPTION VARCHAR2(350)
  DESCRIPTION VARCHAR2(500)
);

CREATE INDEX THROW_IDX1 ON THROWNEXCEPTION(NAME);
CREATE INDEX THROW_IDX2 ON THROWNEXCEPTION(THROWERID);


-- following two tables added 11.7.2001 / e.suez
-- reason: these provide an alternate method of generating tree structures without
--  using connect by prior statements.
CREATE TABLE CLASS_ANCESTORS
(
  CLASSID NUMBER(9) NOT NULL,
  SUPERCLASSID NUMBER(9) NOT NULL,
  HIERARCHY NUMBER(3) NOT NULL
);

CREATE INDEX ANC_IDX1 ON CLASS_ANCESTORS(CLASSID);
CREATE INDEX ANC_IDX2 ON CLASS_ANCESTORS(SUPERCLASSID);

-- used as temporary 'delta' table in populating class_ancestors table
CREATE TABLE TEMP_DELTA
(
  CLASSID NUMBER(9) NOT NULL,
  SUPERCLASSID NUMBER(9) NOT NULL,
  HIERARCHY NUMBER(3) NOT NULL
);



-- 3. sequence generator provides db independence (may switch to db sequences at a later time)

DROP TABLE SEQS;

CREATE TABLE SEQS
(
  SEQNAME VARCHAR2(25) PRIMARY KEY,
  SEQVAL NUMBER(9)
);

-- sequence information
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('PKG_SEQ', 100);
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('CLASSTYPE_SEQ', 100);
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('AUTHOR_SEQ', 100);
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('DOC_SEQ', 100);
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('MEMBER_SEQ', 100);
INSERT INTO SEQS (SEQNAME, SEQVAL) VALUES ('API_SEQ', 100);

-- tried to use oracle sequences - failed.  get synchronization errors from odbc driver each time
-- i try to get a nextval (POL-6063 Function sequence error - an ODBC Error S1010)
--DROP SEQUENCE PKG_SEQ;
--DROP SEQUENCE CLASSTYPE_SEQ;
--DROP SEQUENCE AUTHOR_SEQ;
--DROP SEQUENCE DOC_SEQ;
--DROP SEQUENCE MEMBER_SEQ;

--CREATE SEQUENCE PKG_SEQ;
--CREATE SEQUENCE CLASSTYPE_SEQ;
--CREATE SEQUENCE AUTHOR_SEQ;
--CREATE SEQUENCE DOC_SEQ;
--CREATE SEQUENCE MEMBER_SEQ;


--COMMIT;
